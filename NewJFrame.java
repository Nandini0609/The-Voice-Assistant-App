import java.io.*;
import edu.cmu.sphinx.api.*;
public class NewJFrame extends javax.swing.JFrame {
    
    private LiveSpeechRecognizer recognizer;
    private boolean recognizing=false;
    private Thread recognitionThread;
    
    public NewJFrame() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        label = new javax.swing.JLabel();
        b2 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 0, 102));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Voice Assistant");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(237, 237, 237))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 30, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        ta1.setColumns(20);
        ta1.setRows(5);
        jScrollPane1.setViewportView(ta1);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Commands");

        label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        label.setText("Status : Stopped");

        b2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b2.setText("Stop");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        b1.setText("Start");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(b1)
                .addGap(167, 167, 167)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(b2)
                .addGap(78, 78, 78))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label)
                    .addComponent(b2)
                    .addComponent(b1))
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        stopRecognition();
    }//GEN-LAST:event_b2ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        startRecognition();
    }//GEN-LAST:event_b1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    private void initRecognizer()throws IOException{
        Configuration config=new Configuration();//this tells how is our voice will be captured thats it , ie sets attribute and on basis of below three methods voice will be captured
        config.setAcousticModelPath("resource:/edu/cmu/sphinx/models/en-us/en-us"); // tells pronunciation
        config.setDictionaryPath("resource:/resources/7490.dic");// words are divided into all possible phonemes ie phonemes are defined
        config.setLanguageModelPath("resource:/resources/7490.lm");//sequence of words
        
        recognizer = new LiveSpeechRecognizer(config);
        
    }
    
    private void startRecognition(){
        if(recognizing){
            System.out.println("Already recognizing...");
            return;
        }
        try{
            if(recognizer==null){
                initRecognizer();
            }
            recognizer.startRecognition(true);
            recognizing=true;
            b1.setEnabled(false);
            b2.setEnabled(true);
            label.setText("Status: Listening") ;
        
            recognitionThread=new Thread(()->{execRecognition();});
            recognitionThread.start();
        }catch(IOException e){
            e.printStackTrace();
        }
   }
    private void execRecognition(){
        try{
            SpeechResult speechResult;
            while(recognizing && (speechResult=recognizer.getResult())!=null){
                String voiceCommand=speechResult.getHypothesis();
                System.out.println("Voice Commands:"+voiceCommand);
                ta1.append("Voice Command:"+voiceCommand+"\n");
                try{
                    if(voiceCommand.equalsIgnoreCase("Open Notepad")){
                        new ProcessBuilder("cmd.exe","/c","start","notepad.exe").start();
                    }else if(voiceCommand.equalsIgnoreCase("Close Notepad")){
                        new ProcessBuilder("taskkill","/F","/IM","notepad.exe").start();
                    }
//                    else if(voiceCommand.equalsIgnoreCase("Open Eclipse")){
//                        new ProcessBuilder("taskkill","/F","/IM","notepad.exe").start();
//                    }else if(voiceCommand.equalsIgnoreCase("Close Eclipse")){
//                        new ProcessBuilder("taskkill","/F","/IM","notepad.exe").start();
//                    }
                    else if(voiceCommand.equalsIgnoreCase("Open Chrome")){
                        new ProcessBuilder("cmd.exe","/c","start","chrome.exe").start();
                    }else if(voiceCommand.equalsIgnoreCase("Close Chrome")){
                        new ProcessBuilder("taskkill","/F","/IM","chrome.exe").start();
                    }
//                    else if(voiceCommand.equalsIgnoreCase("Open File Manager")){
//                        new ProcessBuilder("taskkill","/F","/IM","notepad.exe").start();
//                    }else if(voiceCommand.equalsIgnoreCase("Close File Manager")){
//                        new ProcessBuilder("taskkill","/F","/IM","notepad.exe").start();
//                    }
                    else if(voiceCommand.equalsIgnoreCase("System Shutdown")){
                        new ProcessBuilder("shutdown","-s","-t","0").start();
                    }else if(voiceCommand.equalsIgnoreCase("System Restart")){
                        new ProcessBuilder("restart","-r","-t","0").start();
                    }else if(voiceCommand.equalsIgnoreCase("Open Netbeans")){
                        new ProcessBuilder("C:\\Program Files\\NetBeans-24\\netbeans\\bin\\netbeans64.exe").start();
                    }else if(voiceCommand.equalsIgnoreCase("Close Netbeans")){
                        new ProcessBuilder("taskkill","/F","/IM","netbeans64.exe").start();
                    }else{
                        System.out.println("Unrecognized Command");
                    }
                }catch(Exception e){
                    e.printStackTrace();
                }
            }
        }catch(Exception e){
            
        }
    }
    
    private void stopRecognition(){
        if(!recognizing){
            System.out.println("Recognition Already Stopped");
            return;
        }
        recognizing=false;
        try{
            if(recognitionThread!=null && recognitionThread.isAlive()){
                recognitionThread.join();
            }
            if(recognizer!=null){
                recognizer.stopRecognition();
            }
        }catch(InterruptedException e){
            Thread.currentThread().interrupt();
            e.printStackTrace();
        }
        b1.setEnabled(true);
        b2.setEnabled(false);
        label.setText("Status: Stopped") ;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    private javax.swing.JTextArea ta1;
    // End of variables declaration//GEN-END:variables
}
